[{"/home/bonnet/siteListe/siteliste/src/index.js":"1","/home/bonnet/siteListe/siteliste/src/StaticPageElements/Menu/MenuList.js":"2","/home/bonnet/siteListe/siteliste/src/WidgetsAndElements/HeaderBloom.js":"3","/home/bonnet/siteListe/siteliste/src/WidgetsAndElements/AppearText.js":"4","/home/bonnet/siteListe/siteliste/src/Pages/Pougnes.js":"5","/home/bonnet/siteListe/siteliste/src/Pages/Naga.js":"6","/home/bonnet/siteListe/siteliste/src/Pages/FAQ.js":"7","/home/bonnet/siteListe/siteliste/src/App.js":"8","/home/bonnet/siteListe/siteliste/src/Pages/Partenaires.js":"9","/home/bonnet/siteListe/siteliste/src/Pages/Organigramme.js":"10","/home/bonnet/siteListe/siteliste/src/StaticPageElements/Header.js":"11","/home/bonnet/siteListe/siteliste/src/Pages/Poles.js":"12","/home/bonnet/siteListe/siteliste/src/Pages/Programme.js":"13"},{"size":337,"mtime":1607265926086,"results":"14","hashOfConfig":"15"},{"size":4126,"mtime":1607265926082,"results":"16","hashOfConfig":"15"},{"size":191,"mtime":1607265926086,"results":"17","hashOfConfig":"15"},{"size":438,"mtime":1607265926086,"results":"18","hashOfConfig":"15"},{"size":226,"mtime":1606305409076,"results":"19","hashOfConfig":"15"},{"size":826,"mtime":1607526067095,"results":"20","hashOfConfig":"15"},{"size":8387,"mtime":1607265926078,"results":"21","hashOfConfig":"15"},{"size":621,"mtime":1607265926078,"results":"22","hashOfConfig":"15"},{"size":1359,"mtime":1607265926078,"results":"23","hashOfConfig":"15"},{"size":366,"mtime":1607509088227,"results":"24","hashOfConfig":"15"},{"size":882,"mtime":1607265926078,"results":"25","hashOfConfig":"15"},{"size":222,"mtime":1606305409076,"results":"26","hashOfConfig":"15"},{"size":230,"mtime":1606305409076,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"13nlig6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bonnet/siteListe/siteliste/src/index.js",[],["62","63"],"/home/bonnet/siteListe/siteliste/src/StaticPageElements/Menu/MenuList.js",["64"],"/*\n  It's very important class.\n  We create there an adaptive menu, which controls navigation.\n  ControlPages component is used there, so all pages are dynamically rendered there.\n*/\n\nimport React from 'react';\nimport './MenuList.css';\nimport ControlPages from './ControlPages';\nimport snake_scroll from './snake-scroll.png';\n\n\nexport default class MenuList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    //state.isOpen controls mobile menu and state.pageToShow is the name of the page to be rendered.\n    this.state = {isOpen: false, pageToShow: \"Naga\"};\n    this.Open = this.Open.bind(this);\n  }\n\n  //this block is used to control scroll in the document\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  //______________________________________________________\n\n  /*\n    We define a standard js function to handleScroll, in order to have a menu pannel in\n    static position.\n  */\n\n  handleScroll = () => {\n    let scrolled = document.documentElement.scrollTop; // returns scrolled distance\n    let scrollH = document.documentElement.scrollHeight - window.innerHeight;\n    let scrollFixed = window.innerHeight - 60;\n    let menuControl = document.querySelector('.menu-scroll-control'); // refers to menu pannel\n    let w = (scrolled / scrollH) * 100 + \"%\";\n    document.documentElement.style.setProperty(\"--snake-scroll-width\", w);\n    document.documentElement.style.setProperty(\"--mobile-height\", window.innerHeight + \"px\");\n    /*\n    'uncomment to compare scrolled and height of pannel + header'\n    let h = menuControl.clientHeight + 120;\n    console.log(scrolled + ' ' + h);\n    */\n\n    // static position\n\n    if(scrolled > scrollFixed) {\n      console.log(\"here\");\n      let scroll = (scrolled - scrollFixed) + \"px\";\n      menuControl.style.top = scroll;\n      menuControl.style.position = \"absolute\";\n    }\n    else {\n      menuControl.style.top = \"120px\";\n      menuControl.style.position=\"\";\n    }\n };\n\n\n// opens a menu\n\n Open() {\n    this.setState(state => ({\n      isOpen: !state.isOpen\n    }));\n  }\n\n//changes state in order to show selected page\n\n showPage(pageName) {\n    this.setState(state => ({\n      pageToShow: pageName\n    }));\n    this.Open();\n  }\n\n  render() {\n\n    // start of a block that dynamically make difference between desktop and mobile styles for menu\n\n    const windowWidth = window.innerWidth;\n    let ulStyle = {};\n    let burgerStyle = {};\n    let open = this.state.isOpen;\n    if (windowWidth <= 790 && !open) {\n      ulStyle = {\n        transform: 'translateY(-100%)'\n      };\n    } else {\n      ulStyle = {\n        transform: 'translateY(0)'\n      }\n    }\n\n    if (windowWidth <= 790) {\n      burgerStyle = {\n        display: 'flex'\n      };\n    } else {\n      burgerStyle = {\n        display: 'none'\n      };\n    }\n\n    // end-of-bloock________________________________________\n\n\n    return(\n      <div className=\"menu\">\n      <div className=\"menu-scroll-control\">\n        <div className=\"menu-control\">\n        <button onClick={this.Open} className=\"burger\" style={burgerStyle}>click me</button>\n        <ul className=\"menu-list\" style={ulStyle}>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"Naga\")}>NAGA</li>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"Poles\")}>Mots de Poles</li>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"Pougnes\")}>Pougnes</li>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"Programme\")}>Programme</li>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"Organigramme\")}>Organigramme</li>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"Partenaires\")}>Partenaires</li>\n          <li className=\"menu-element\" onClick={this.showPage.bind(this,\"FAQ\")}>FAQ</li>\n        </ul>\n        </div>\n        <div className=\"snake-scroller\"></div>\n        </div>\n        <ControlPages pageToShow={this.state.pageToShow} />\n      </div>\n    );\n    }\n  }\n","/home/bonnet/siteListe/siteliste/src/WidgetsAndElements/HeaderBloom.js",[],["65","66"],"/home/bonnet/siteListe/siteliste/src/WidgetsAndElements/AppearText.js",["67"],"import './Styles/AppearText.css';\n\nexport default function AppearText(props) {\n\n  let text = props.appearText.split(\" \");\n  let id = 1;\n  let n = text.length;\n  const appearList = text.map((word) => <li className=\"appear-element\" key={(++id).toString()} style={{animationDuration: 200*Math.sin(Math.PI / 180 * ((id + 3) / 5)) + \"s\"}}>{word}</li>);\n  return(\n    <div>\n      <ul className=\"appear-list\">{appearList}</ul>\n    </div>\n  );\n}\n","/home/bonnet/siteListe/siteliste/src/Pages/Pougnes.js",["68"],"/home/bonnet/siteListe/siteliste/src/Pages/Naga.js",["69"],"/home/bonnet/siteListe/siteliste/src/Pages/FAQ.js",["70"],"/home/bonnet/siteListe/siteliste/src/App.js",["71","72"],"/*\n  The heart of application. There is 3 components Header, MenuList and Footer\n  The Header and the Footer are always on the page and MenuList contain menu and pages\n  controlled by this menu.\n*/\n\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './StaticPageElements/Header';\nimport MenuList from './StaticPageElements/Menu/MenuList';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Header />\n        <MenuList isOpen=\"false\" />\n      </div>\n  );\n}\n}\n",["73","74"],"/home/bonnet/siteListe/siteliste/src/Pages/Partenaires.js",["75"],"import React from 'react';\n\nexport default class Partenaires extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return(\n      <div>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n        <p>Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n        <br/>\n        <br/>\n\n      </div>\n    );\n  }\n}\n","/home/bonnet/siteListe/siteliste/src/Pages/Organigramme.js",["76"],"/home/bonnet/siteListe/siteliste/src/StaticPageElements/Header.js",["77"],"/*\n  Header functional class\n*/\n\nimport './Header.css';\nimport Button from '../WidgetsAndElements/Button';\nimport HeaderBloom from '../WidgetsAndElements/HeaderBloom';\nimport AppearText from '../WidgetsAndElements/AppearText';\n\nexport default function Header() {\n\n  document.onreadystatechange = () => {\n    const header = document.querySelector('.header');\n    header.style.height = window.innerHeight - 60 + \"px\";\n  };\n\n  return(\n    <div className=\"header\">\n        <HeaderBloom text=\"Naga\" />\n        <div className=\"apearing-description\">\n        <AppearText appearText=\"Naga est la meilleure liste de TSP. Nous avons notre chambre secret dans le sous sol de TSP ou nous nous cachons du reste du monde. Mais on est partout. On est meme dant ton jardin mdr. On est confine chez toi. Toutes les associations obeissent a nous. Bonne chance...\" />\n        </div>\n    </div>\n  );\n}\n","/home/bonnet/siteListe/siteliste/src/Pages/Poles.js",["78"],"/home/bonnet/siteListe/siteliste/src/Pages/Programme.js",["79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":10,"column":8,"nodeType":"86","messageId":"87","endLine":10,"endColumn":20},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","replacedBy":"89"},{"ruleId":"84","severity":1,"message":"90","line":7,"column":7,"nodeType":"86","messageId":"87","endLine":7,"endColumn":8},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":4},{"ruleId":"91","severity":1,"message":"92","line":6,"column":3,"nodeType":"93","messageId":"94","endLine":8,"endColumn":4},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":4},{"ruleId":"84","severity":1,"message":"95","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":15,"column":3,"nodeType":"93","messageId":"94","endLine":17,"endColumn":4},{"ruleId":"80","replacedBy":"96"},{"ruleId":"82","replacedBy":"97"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":4},{"ruleId":"91","severity":1,"message":"92","line":7,"column":3,"nodeType":"93","messageId":"94","endLine":9,"endColumn":4},{"ruleId":"84","severity":1,"message":"98","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":4},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":4},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'snake_scroll' is defined but never used.","Identifier","unusedVar",["99"],["100"],"'n' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ReactDOM' is defined but never used.",["99"],["100"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]